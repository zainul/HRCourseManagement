<h4>Diklat Non Reguler</h4>
<div id="gridUserTrainingNonReg"></div>

<script>
    function getDropdownTraining(callback){
        $.ajax({
            url:'/training/get_dropdown_kendo_format',
            type:'get',
            dataType:'json',
            success:function(response){
                callback(response);
            }
        })
    }

    function getDropdownUser(callback){
        $.ajax({
            url:'/user/get_dropdown_kendo_format',
            type:'get',
            dataType:'json',
            success:function(response){
                callback(response);
            }
        })
    }

    function getTimeValidation(date1, date2){
        var d1 = new Date(date1);
        var d2 = new Date(date2);
        return d1.getTime()>d2.getTime();
    }

    var isregularclient = [
        {
            value:false,
            text:"Non Regular"
        }
    ]

    $(document).ready(function () {
        var endDate;
        dataSource = new kendo.data.DataSource({
            transport: {
                read:  {
                    url: "/user_training_nonreg/get_user_training_kendo_format"
                },
                update: {
                    url: function(options){
                        return "/user_training_nonreg/" + options.models[0].id;
                    },
                    type:"PUT",
                    dataType: "json"
                },
                destroy: {
                    url: function(options){
                        return "/user_training_nonreg/" + options.models[0].id;
                    },
                    type:"DELETE",
                    dataType: "json"
                },
                create: {
                    url: "/user_training_nonreg",
                    type:"POST",
                    dataType: "json"
                },
                parameterMap: function(options, operation) {
                    if (operation !== "read" && options.models) {
                        if(operation == "create"){
                            delete options.models[0].id;
                            return options.models[0];
                        }else{
                            return options.models[0];
                        }
                    }
                }
            },
            batch: true,
            pageSize: 20,
            schema: {
                model: {
                    id: "id",
                    fields: {
                        training:{validation: { required: true },field:"training",type: "number", defaultValue: 1 },
                        organizer:{validation: { required: true } },
                        city:{validation: { required: true } },
                        start_date:{validation: { required: true },type:"date"},
                        end_date:{validation: { required: true,
                            enddatevalidation: function (input) {
                                if (input.is("[name='end_date']") && input.val() != "") {
                                    input.attr("data-enddatevalidation-msg", "Tanggal akhir harus lebih besar atau sama dengan dari tanggal awal");
                                    return getTimeValidation(input.val(),$('input[name="start_date"]').val());
                                }

                                return true;
                            }
                        },type:"date"},
                        user: { validation: { required: true },field:"user",type: "number", defaultValue: 1 },
                        point:{ validation: { required: true },type: "number"},
                        certificate_number:{ validation: { required: true } },
                        certificate_date:{ 
                            validation: { 
                                required: true,
                                productnamevalidation: function (input) {
                                    if (input.is("[name='certificate_date']") && input.val() != "") {
                                        input.attr("data-productnamevalidation-msg", "Tanggal sertifikat harus lebih besar atau sama dengan dari tanggal akhir");
                                        return getTimeValidation(input.val(),$('input[name="end_date"]').val());
                                    }

                                    return true;
                                }
                            },
                            type:"date"},
                        rank:{ validation: { required: true }},
                        isRegular:{ field:"isRegular",editable:false, defaultValue: false,validation: { required: true } }
                    }
                }
            }
        });
        /*

         */

            getDropdownTraining(function(training_data){
                getDropdownUser(function(user_data){
                        $("#gridUserTrainingNonReg").kendoGrid({
                            dataSource: dataSource,
                            pageable: {refresh:true},
                            filterable: {
                                mode: "row"
                            },
                            scrollable: {
                                virtual: true
                            },
                            groupable:true,
                            height: 550,
                            toolbar: ["create"],
                            edit:function(e){
                                if (e.model.isNew()) {
                                    $("select").each(function () {
                                        var ddl = $(this).data("kendoDropDownList");
                                        if (ddl){
                                            ddl.options.optionLabel = " - Pilih - ";
                                            ddl.refresh();
                                            ddl.value("");
                                        }
                                    });
                                }
                            },
                            columns: [
                                { field:"training", title: "Diklat",values: training_data, width: "400px"},
                                { field:"organizer", title: "Penyelenggara" ,width: "220px"},
                                { field:"city", title: "Kota" ,width: "220px"},
                                { field:"start_date", title: "Tanggal Mulai" ,width: "220px",format:"{0:MM-dd-yyyy}"},
                                { field:"end_date", title: "Tanggal Akhir" ,width: "220px",format:"{0:MM-dd-yyyy}"},
                                { field:"user", title: "Nama Peserta",values:user_data ,width: "220px"},
                                { field:"point", title: "Nilai" ,width: "220px"},
                                { field:"certificate_number", title: "No Sertifikat",width: "220px" },
                                { field:"certificate_date", title: "Tanggal Sertifikat" ,width: "220px",format:"{0:MM-dd-yyyy}" },
                                { field:"isRegular",values:isregularclient, title: "Non Regular", width: "220px"},
                                { field:"rank", title: "Ranking" ,width: "220px"},
                                { command: ["edit", "destroy"], title: "&nbsp;", width: "200px" }],
                            editable: "popup",
                            save:function(e){
                                setTimeout(function(){
                                    $('#gridUserTrainingNonReg').data('kendoGrid').dataSource.read();
                                    $('#gridUserTrainingNonReg').data('kendoGrid').refresh();
                                },500);
                            }
                        });
						var grid = $("#gridUserTrainingNonReg").data("kendoGrid");
            			grid.hideColumn(9);
                    
                })
            })
        
    });
</script>