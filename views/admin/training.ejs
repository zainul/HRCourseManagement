<div id="gridTraining"></div>
<script>
    function getTrainingDirectories(callback){
        $.ajax({
            url:'/training_directory/get_kendo_format',
            type:'get',
            dataType:'json',
            success:function(response){
                callback(response);
            }
        })
    }

    function getUserLevel(callback){
        $.ajax({
            url:'/userlevel/get_kendo_format',
            type:'get',
            dataType:'json',
            success:function(response){
                callback(response);
            }
        })
    }

    function initializeKendoGrid(training){
        var element = $("#gridTraining").kendoGrid({
            dataSource: {
                transport: {
                    read: "/training/get_kendo_format",
                    update: {
                        url: function(options){
                            return "/training/" + options.models[0].id;
                        },
                        type:"PUT",
                        dataType: "json"
                    },
                    destroy: {
                        url: function(options){
                            return "/training/" + options.models[0].id;
                        },
                        type:"DELETE",
                        dataType: "json"
                    },
                    create: {
                        url: "/training",
                        type:"POST",
                        dataType: "json"
                    },
                    parameterMap: function(options, operation) {
                        if (operation !== "read" && options.models) {
                            if(operation == "create"){
                                delete options.models[0].id;
                                return options.models[0];
                            }else{
                                return options.models[0];
                            }
                        }
                    }
                },
                batch: true,
                pageSize: 20,
                schema: {
                    model: {
                        id: "id",
                        fields: {
                            name: { validation: { required: true } },
                            code:{ validation: { required: true } },
                            directory:{validation: { required: true },field:"directory",type: "number", defaultValue: 1}
                        }
                    }
                }
            },
            height: 600,
            sortable: true,
            pageable: {refresh:true},
            detailInit: detailInit,
            filterable: {
                mode: "row"
            },
            toolbar: ["create"],
            edit:function(e){
                if (e.model.isNew()) {
                    $("select").each(function () {
                        var ddl = $(this).data("kendoDropDownList");
                        if (ddl){
                            ddl.options.optionLabel = " - Pilih - ";
                            ddl.refresh();
                            ddl.value("");
                        }
                    });
                }
            },
            columns: [
                { field:"name", title: "Nama" },
                { field:"code", title: "Kode Diklat" },
                { field:"directory", title: "Direktory Diklat",values:training},
                { command: ["edit", "destroy"], title: "&nbsp;", width: "200px" }],
            editable: "popup",
            save:function(e){
                setTimeout(function(){
                    $('#gridTraining').data('kendoGrid').dataSource.read();
                    $('#gridTraining').data('kendoGrid').refresh();
                },500);
                //var grid = $("#gridTraining").data("kendoGrid");
                //grid.refresh();     
            }
        });
    }

    function detailInit(e) {
        getUserLevel(function(user_level_data){
            $("<div/>").appendTo(e.detailCell).kendoGrid({
                dataSource: {
                    transport: {
                        read: "/user_level_training/get_subgrid_kendo_format?training_id="+ e.data.id,
                        update: {
                            url: function(options){
                                return "/user_level_training/" + options.models[0].id;
                            },
                            type:"PUT",
                            dataType: "json"
                        },
                        destroy: {
                            url: function(options){
                                return "/user_level_training/" + options.models[0].id;
                            },
                            type:"DELETE",
                            dataType: "json"
                        },
                        create: {
                            url: "/user_level_training",
                            type:"POST",
                            dataType: "json"
                        },
                        parameterMap: function(options, operation) {
                            if (operation !== "read" && options.models) {
                                if(operation == "create"){
                                    delete options.models[0].id;
                                    return options.models[0];
                                }else{
                                    return options.models[0];
                                }
                            }
                        }
                    },
                    batch: true,
                    pageSize: 10,
                    schema: {
                        model: {
                            id: "id",
                            fields: {
                                user_level: { validation: { required: true },field:"user_level",type: "number", defaultValue: 1 },
                                training: { validation: { required: true }, defaultValue: e.data.id },
                            }
                        }
                    }
                },
                scrollable: false,
                sortable: true,
                filterable: {
                    mode: "row"
                },
                pageable: {refresh:true},
                toolbar: ["create"],
                edit:function(e){
                                if (e.model.isNew()) {
                                    $("select").each(function () {
                                        var ddl = $(this).data("kendoDropDownList");
                                        if (ddl){
                                            ddl.options.optionLabel = " - Pilih - ";
                                            ddl.refresh();
                                            ddl.value("");
                                        }
                                    });
                                }
                            },
                columns: [
                    { field: "user_level", title:"Jabatan",width: "370px" ,values:user_level_data},
                    { command: ["edit", "destroy"], title: "&nbsp;", width: "200px" }
                ],
                editable: "popup",
                save:function(e){
                    setTimeout(function(){
                        $('#gridTraining').data('kendoGrid').dataSource.read();
                        $('#gridTraining').data('kendoGrid').refresh();
                    },500);     
                }
            });
        })    
    }
    $(document).ready(function() {
        getTrainingDirectories(function(training_data){
            initializeKendoGrid(training_data);
        });
    });
</script>

